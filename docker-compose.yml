version: '2'

services:

  data:
    build:
      context: ./data/
    volumes:
      - public_html:${SRC_PATH}
      - sql:${SRC_PATH}/sql
    environment:
      SRC_PATH: ${SRC_PATH}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      SECRET_KEY: ${SECRET_KEY}
      AMPACHE_DOMAIN: ${AMPACHE_DOMAIN}
    entrypoint: bash -x /entrypoint.sh

  php-fpm:
    build:
      context: ./php-fpm/
    volumes:
      - public_html:${SRC_PATH}
      - ${CATALOG_PATH}:/media:ro
    command: php-fpm
    depends_on:
      - data
      - mysql
    networks:
      - back

  data_mysql:
    build:
      context: ./data_mysql/
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      S3_BUCKET: ${S3_BUCKET}
      S3_PATH: ${S3_PATH}
      S3_ARCHIVE: ${S3_ARCHIVE}
    volumes:
      - sql:/docker-entrypoint-initdb.d/
    command: aws s3 cp s3://$S3_BUCKET/$S3_PATH/$S3_ARCHIVE /docker-entrypoint-initdb.d/

  mysql:
    build:
      context: ./mysql/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    depends_on:
      - data
      - data_mysql
    volumes:
      - sql:/docker-entrypoint-initdb.d/
    networks:
      - back

  nginx:
    build:
      context: ./nginx/
    links:
      - php-fpm
    ports:
      - ${HTTP_PORT}:80
#       ToDo: test TLS connections
#      - ${HTTPS_PORT}:443
    restart: always
    volumes:
      - public_html:${SRC_PATH}
      - certs:/etc/ssl/nginx
    environment:
      SRC_PATH: ${SRC_PATH}
      AMPACHE_DOMAIN: ${AMPACHE_DOMAIN}
    entrypoint: bash /entrypoint.sh
    depends_on:
      - php-fpm
    networks:
      - back
      - front

  # ToDo uncomment to generate ssl certs and share it with nginx container
  # certbot:
  #   image: certbot/certbot:v0.22.0
  #   ports:
  #     - 443:443
  #   command:  "certonly --standalone -d ${AMPACHE_DOMAIN} --text --agree-tos --email ${DNS_ADMIN_MAIL} --rsa-key-size 4096 --verbose --renew-by-default "
  #   environment:
  #     - TERM=xterm
  #   volumes:
  #     - certs:/etc/letsencrypt
  #   networks:
  #     - front


  backup:
    build:
      context: ./docker-mysql-backup
    command: backup
    links:
      - mysql
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      S3_BUCKET: ${S3_BUCKET}
      S3_PATH: ${S3_PATH}
      S3_ARCHIVE: ${S3_ARCHIVE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    networks:
      - back

volumes:
  public_html:

  sql:

  certs:

networks:
  front:

  back:
